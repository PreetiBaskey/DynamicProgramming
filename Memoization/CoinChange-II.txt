#include<bits/stdc++.h>
using namespace std;

vector<vector<int>> dp(301, vector<int>(5001, -1));

int solve(int i, vector<int> coins, int amount, int n) {
    if(amount == 0) {
        return 1;
    }
    if(dp[i][amount] != -1) {
        return dp[i][amount];
    }
    if(i == n) {
        return 0;
    }
    if(amount < coins[i]) {
        return dp[i][amount] = solve(i + 1, coins, amount, n);
    }
    
    int take = solve(i, coins, amount - coins[i], n);
    int skip = solve(i + 1, coins, amount, n);
    
    return dp[i][amount] = take + skip;
}

int main() {
    
    vector<int> coins = {1, 2, 5};
    int amount = 5, n = 3;
    
    int result = solve(0, coins, amount, n);
    cout<<"Number of ways for getting amount is :- "<<result;
    
    return 0;
}
