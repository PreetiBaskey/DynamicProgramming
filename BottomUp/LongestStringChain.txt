#include<bits/stdc++.h>
using namespace std;

bool isPredecessor(string idx, string pidx) {
    int M = pidx.length();
    int N = idx.length();
    int i, j;

    for(i = 0, j = 0; i < M, j < N; j++) {
        if(pidx[i] == idx[j]) {
            i++;
        }
    }

    return i == M;
}

bool compare(string &string1, string &string2) {
    return string1.size() < string2.size();
}

int main() {
    
    vector<string> chain = {"abcd", "abxcd", "a", "ab", "abc"};
    int n = chain.size();
    
    vector<int> dp(n, 1);
    int maxL = 0;
    sort(begin(chain), end(chain), compare);
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < i; j++) {
            if(isPredecessor(chain[i], chain[j])) {
                dp[i] = max(dp[i], dp[j] + 1);
                maxL = max(maxL, dp[i]);
            } 
        }
    }
    
    cout<<"Longest string chain length is :- "<<maxL;
    
    return 0;
}
